{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sourceContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161061b38038061061b83398101604081905261002f916100a6565b816001600160a01b03811661005e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b03908116608052600080546001600160a01b03191692909116919091179055506100d9565b80516001600160a01b03811681146100a157600080fd5b919050565b600080604083850312156100b957600080fd5b6100c28361008a565b91506100d06020840161008a565b90509250929050565b6080516105226100f9600039600081816090015260fc01526105226000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046101ca565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c3660046101fb565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610140576040516335fdcccd60e21b815233600482015260240160405180910390fd5b61015161014c82610410565b610154565b50565b6000805460608301516040516001600160a01b039092169161017691906104bd565b6000604051808303816000865af19150503d80600081146101b3576040519150601f19603f3d011682016040523d82523d6000602084013e6101b8565b606091505b50509050806101c657600080fd5b5050565b6000602082840312156101dc57600080fd5b81356001600160e01b0319811681146101f457600080fd5b9392505050565b60006020828403121561020d57600080fd5b813567ffffffffffffffff81111561022457600080fd5b820160a081850312156101f457600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561026f5761026f610236565b60405290565b60405160a0810167ffffffffffffffff8111828210171561026f5761026f610236565b604051601f8201601f1916810167ffffffffffffffff811182821017156102c1576102c1610236565b604052919050565b803567ffffffffffffffff811681146102e157600080fd5b919050565b600082601f8301126102f757600080fd5b813567ffffffffffffffff81111561031157610311610236565b610324601f8201601f1916602001610298565b81815284602083860101111561033957600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261036757600080fd5b8135602067ffffffffffffffff82111561038357610383610236565b610391818360051b01610298565b82815260069290921b840181019181810190868411156103b057600080fd5b8286015b8481101561040557604081890312156103cd5760008081fd5b6103d561024c565b81356001600160a01b03811681146103ed5760008081fd5b815281850135858201528352918301916040016103b4565b509695505050505050565b600060a0823603121561042257600080fd5b61042a610275565b8235815261043a602084016102c9565b6020820152604083013567ffffffffffffffff8082111561045a57600080fd5b610466368387016102e6565b6040840152606085013591508082111561047f57600080fd5b61048b368387016102e6565b606084015260808501359150808211156104a457600080fd5b506104b136828601610356565b60808301525092915050565b6000825160005b818110156104de57602081860181015185830152016104c4565b50600092019182525091905056fea264697066735822122005ffaea9e321ba5a5032cd201887c97103cf3894b93c02085948974f2fb30f8a64736f6c63430008130033",
    "sourceMap": "296:598:33:-:0;;;527:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;616:7;-1:-1:-1;;;;;538:20:16;;534:58;;567:25;;-1:-1:-1;;;567:25:16;;589:1;567:25;;;640:51:34;613:18;;567:25:16;;;;;;;534:58;-1:-1:-1;;;;;598:17:16;;;;;635:14:33::1;:48:::0;;-1:-1:-1;;;;;;635:48:33::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;296:598:33;;14:177:34;93:13;;-1:-1:-1;;;;;135:31:34;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;296:598:33;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046101ca565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c3660046101fb565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610140576040516335fdcccd60e21b815233600482015260240160405180910390fd5b61015161014c82610410565b610154565b50565b6000805460608301516040516001600160a01b039092169161017691906104bd565b6000604051808303816000865af19150503d80600081146101b3576040519150601f19603f3d011682016040523d82523d6000602084013e6101b8565b606091505b50509050806101c657600080fd5b5050565b6000602082840312156101dc57600080fd5b81356001600160e01b0319811681146101f457600080fd5b9392505050565b60006020828403121561020d57600080fd5b813567ffffffffffffffff81111561022457600080fd5b820160a081850312156101f457600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561026f5761026f610236565b60405290565b60405160a0810167ffffffffffffffff8111828210171561026f5761026f610236565b604051601f8201601f1916810167ffffffffffffffff811182821017156102c1576102c1610236565b604052919050565b803567ffffffffffffffff811681146102e157600080fd5b919050565b600082601f8301126102f757600080fd5b813567ffffffffffffffff81111561031157610311610236565b610324601f8201601f1916602001610298565b81815284602083860101111561033957600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261036757600080fd5b8135602067ffffffffffffffff82111561038357610383610236565b610391818360051b01610298565b82815260069290921b840181019181810190868411156103b057600080fd5b8286015b8481101561040557604081890312156103cd5760008081fd5b6103d561024c565b81356001600160a01b03811681146103ed5760008081fd5b815281850135858201528352918301916040016103b4565b509695505050505050565b600060a0823603121561042257600080fd5b61042a610275565b8235815261043a602084016102c9565b6020820152604083013567ffffffffffffffff8082111561045a57600080fd5b610466368387016102e6565b6040840152606085013591508082111561047f57600080fd5b61048b368387016102e6565b606084015260808501359150808211156104a457600080fd5b506104b136828601610356565b60808301525092915050565b6000825160005b818110156104de57602081860181015185830152016104c4565b50600092019182525091905056fea264697066735822122005ffaea9e321ba5a5032cd201887c97103cf3894b93c02085948974f2fb30f8a64736f6c63430008130033",
    "sourceMap": "296:598:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:209:16;;;;;;:::i;:::-;;:::i;:::-;;;470:14:34;;463:22;445:41;;433:2;418:18;1397:209:16;;;;;;;;1652:130;;;;;;:::i;:::-;;:::i;:::-;;2194:86;;;-1:-1:-1;;;;;2266:8:16;1061:32:34;1043:51;;1031:2;1016:18;2194:86:16;897:203:34;1397:209:16;1482:4;-1:-1:-1;;;;;;1501:56:16;;-1:-1:-1;;;1501:56:16;;:100;;-1:-1:-1;;;;;;;1561:40:16;;-1:-1:-1;;;1561:40:16;1501:100;1494:107;1397:209;-1:-1:-1;;1397:209:16:o;1652:130::-;2412:10;-1:-1:-1;;;;;2434:8:16;2412:31;;2408:69;;2452:25;;-1:-1:-1;;;2452:25:16;;2466:10;2452:25;;;1043:51:34;1016:18;;2452:25:16;;;;;;;2408:69;1756:21:::1;;1769:7:::0;1756:21:::1;:::i;:::-;:12;:21::i;:::-;1652:130:::0;:::o;696:196:33:-;799:12;825:14;;846:12;;;;817:42;;-1:-1:-1;;;;;825:14:33;;;;817:42;;846:12;817:42;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;798:61;;;877:7;869:16;;;;;;788:104;696:196;:::o;14:286:34:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:34;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:34:o;497:395::-;591:6;644:2;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;700:9;687:23;733:18;725:6;722:30;719:50;;;765:1;762;755:12;719:50;788:22;;844:3;826:16;;;822:26;819:46;;;861:1;858;851:12;1105:127;1166:10;1161:3;1157:20;1154:1;1147:31;1197:4;1194:1;1187:15;1221:4;1218:1;1211:15;1237:256;1308:4;1302:11;;;1340:17;;1387:18;1372:34;;1408:22;;;1369:62;1366:88;;;1434:18;;:::i;:::-;1470:4;1463:24;1237:256;:::o;1498:252::-;1569:2;1563:9;1611:4;1599:17;;1646:18;1631:34;;1667:22;;;1628:62;1625:88;;;1693:18;;:::i;1755:275::-;1826:2;1820:9;1891:2;1872:13;;-1:-1:-1;;1868:27:34;1856:40;;1926:18;1911:34;;1947:22;;;1908:62;1905:88;;;1973:18;;:::i;:::-;2009:2;2002:22;1755:275;;-1:-1:-1;1755:275:34:o;2035:171::-;2102:20;;2162:18;2151:30;;2141:41;;2131:69;;2196:1;2193;2186:12;2131:69;2035:171;;;:::o;2211:530::-;2253:5;2306:3;2299:4;2291:6;2287:17;2283:27;2273:55;;2324:1;2321;2314:12;2273:55;2360:6;2347:20;2386:18;2382:2;2379:26;2376:52;;;2408:18;;:::i;:::-;2452:55;2495:2;2476:13;;-1:-1:-1;;2472:27:34;2501:4;2468:38;2452:55;:::i;:::-;2532:2;2523:7;2516:19;2578:3;2571:4;2566:2;2558:6;2554:15;2550:26;2547:35;2544:55;;;2595:1;2592;2585:12;2544:55;2660:2;2653:4;2645:6;2641:17;2634:4;2625:7;2621:18;2608:55;2708:1;2683:16;;;2701:4;2679:27;2672:38;;;;2687:7;2211:530;-1:-1:-1;;;2211:530:34:o;2746:1177::-;2814:5;2867:3;2860:4;2852:6;2848:17;2844:27;2834:55;;2885:1;2882;2875:12;2834:55;2921:6;2908:20;2947:4;2970:18;2966:2;2963:26;2960:52;;;2992:18;;:::i;:::-;3032:36;3064:2;3059;3056:1;3052:10;3048:19;3032:36;:::i;:::-;3102:15;;;3188:1;3184:10;;;;3172:23;;3168:32;;;3133:12;;;;3212:15;;;3209:35;;;3240:1;3237;3230:12;3209:35;3276:2;3268:6;3264:15;3288:606;3304:6;3299:3;3296:15;3288:606;;;3382:4;3376:3;3371;3367:13;3363:24;3360:114;;;3428:1;3457:2;3453;3446:14;3360:114;3500:21;;:::i;:::-;3549:17;;-1:-1:-1;;;;;3601:33:34;;3589:46;;3579:144;;3677:1;3706:2;3702;3695:14;3579:144;3736:22;;3807:12;;;3794:26;3778:14;;;3771:50;3834:18;;3872:12;;;;3330:4;3321:14;3288:606;;;-1:-1:-1;3912:5:34;2746:1177;-1:-1:-1;;;;;;2746:1177:34:o;3928:1012::-;4046:9;4105:4;4097:5;4081:14;4077:26;4073:37;4070:57;;;4123:1;4120;4113:12;4070:57;4151:21;;:::i;:::-;4210:5;4197:19;4188:7;4181:36;4251:33;4280:2;4273:5;4269:14;4251:33;:::i;:::-;4246:2;4237:7;4233:16;4226:59;4332:2;4325:5;4321:14;4308:28;4355:18;4396:2;4388:6;4385:14;4382:34;;;4412:1;4409;4402:12;4382:34;4450:52;4487:14;4478:6;4471:5;4467:18;4450:52;:::i;:::-;4445:2;4436:7;4432:16;4425:78;4552:2;4545:5;4541:14;4528:28;4512:44;;4581:2;4571:8;4568:16;4565:36;;;4597:1;4594;4587:12;4565:36;4635:54;4674:14;4663:8;4656:5;4652:20;4635:54;:::i;:::-;4630:2;4621:7;4617:16;4610:80;4739:3;4732:5;4728:15;4715:29;4699:45;;4769:2;4759:8;4756:16;4753:36;;;4785:1;4782;4775:12;4753:36;;4824:80;4889:14;4878:8;4871:5;4867:20;4824:80;:::i;:::-;4818:3;4805:17;;4798:107;-1:-1:-1;4809:7:34;3928:1012;-1:-1:-1;;3928:1012:34:o;4945:412::-;5074:3;5112:6;5106:13;5137:1;5147:129;5161:6;5158:1;5155:13;5147:129;;;5259:4;5243:14;;;5239:25;;5233:32;5220:11;;;5213:53;5176:12;5147:129;;;-1:-1:-1;5331:1:34;5295:16;;5320:13;;;-1:-1:-1;5295:16:34;4945:412;-1:-1:-1;4945:412:34:o",
    "linkReferences": {},
    "immutableReferences": {
      "40805": [
        {
          "start": 144,
          "length": 32
        },
        {
          "start": 252,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "getRouter()": "b0f479a1",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sourceContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"constructor\":{\"params\":{\"_router\":\"Address of the CCIP Router contract\",\"_sourceContract\":\"address of the sourceContract contract\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SourceGateway.sol\":\"SourceGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/gho-core/node_modules/@aave/\",\":@aave/core-v3/=lib/gho-core/node_modules/@aave/core-v3/\",\":@aave/periphery-v3/=lib/gho-core/node_modules/@aave/periphery-v3/\",\":@chainlink/=node_modules/@chainlink/\",\":@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-address-book/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/src/\",\":aave-helpers/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-helpers/\",\":aave-stk-v1-5/=lib/gho-core/lib/aave-stk-v1-5/\",\":aave-v3-core/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/lib/aave-v3-core/\",\":aave-v3-periphery/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/lib/aave-v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=lib/gho-core/node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":gho-core/=lib/gho-core/\",\":hardhat-deploy/=lib/gho-core/node_modules/hardhat-deploy/\",\":hardhat/=lib/gho-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-utils/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-helpers/lib/solidity-utils/\"]},\"sources\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7\",\"dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea\",\"dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e\",\"dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2\",\"dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"src/PriceConverter.sol\":{\"keccak256\":\"0xba1c93cead77719224a1c6fb9ba816be6329fe7ee7ba64a10dd7be6bbb738a7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a5fbd6e0aeddb553855cf65270f9acaad2bbd1b141ef45b2de253d2160c676b\",\"dweb:/ipfs/QmP6RnKXbqXCfUKLNyNS6V33Rr9SYQBQxdtLyPEoqwDtVy\"]},\"src/SourceContract.sol\":{\"keccak256\":\"0x7f9f1b9c434d195f3f292a578e76b62c609c267178f1cfa70f29a3d18265cb7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24986faf6be5b8c3478adc6a5f0f5707245f536081f2925d001b270fcbabe3f3\",\"dweb:/ipfs/QmV8aGN6rPo8m328Bpv39LWELqwmFZJyLzk7VoK7ARCjYb\"]},\"src/SourceGateway.sol\":{\"keccak256\":\"0x5588d1d8187021f6f8e12201c046fb3fdd056622cb57d2d6cc9be84c1ae89820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a6a75420b016117f243b64eb5ac7155b2b9448486d9bfc8f9213b00db21bf7d\",\"dweb:/ipfs/QmZSGtgZcsPzNvJ7zxaZ4nMFtXgEXc2VQhDuXmKNukCdH7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_router",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_sourceContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Note ensure you check the msg.sender is the OffRampRouter",
            "params": {
              "message": "CCIP Message"
            }
          },
          "constructor": {
            "params": {
              "_router": "Address of the CCIP Router contract",
              "_sourceContract": "address of the sourceContract contract"
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aave/=lib/gho-core/node_modules/@aave/",
        ":@aave/core-v3/=lib/gho-core/node_modules/@aave/core-v3/",
        ":@aave/periphery-v3/=lib/gho-core/node_modules/@aave/periphery-v3/",
        ":@chainlink/=node_modules/@chainlink/",
        ":@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/",
        ":@chainlink/contracts/=node_modules/@chainlink/contracts/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":aave-address-book/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/src/",
        ":aave-helpers/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-helpers/",
        ":aave-stk-v1-5/=lib/gho-core/lib/aave-stk-v1-5/",
        ":aave-v3-core/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/lib/aave-v3-core/",
        ":aave-v3-periphery/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/lib/aave-v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":eth-gas-reporter/=lib/gho-core/node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":gho-core/=lib/gho-core/",
        ":hardhat-deploy/=lib/gho-core/node_modules/hardhat-deploy/",
        ":hardhat/=lib/gho-core/node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solidity-utils/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-helpers/lib/solidity-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SourceGateway.sol": "SourceGateway"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6",
        "urls": [
          "bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7",
          "dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48",
        "urls": [
          "bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33",
          "dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol": {
        "keccak256": "0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b",
        "urls": [
          "bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea",
          "dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679",
        "urls": [
          "bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e",
          "dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f",
        "urls": [
          "bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2",
          "dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
        "urls": [
          "bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
          "dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
        ],
        "license": "MIT"
      },
      "src/PriceConverter.sol": {
        "keccak256": "0xba1c93cead77719224a1c6fb9ba816be6329fe7ee7ba64a10dd7be6bbb738a7d",
        "urls": [
          "bzz-raw://2a5fbd6e0aeddb553855cf65270f9acaad2bbd1b141ef45b2de253d2160c676b",
          "dweb:/ipfs/QmP6RnKXbqXCfUKLNyNS6V33Rr9SYQBQxdtLyPEoqwDtVy"
        ],
        "license": "MIT"
      },
      "src/SourceContract.sol": {
        "keccak256": "0x7f9f1b9c434d195f3f292a578e76b62c609c267178f1cfa70f29a3d18265cb7c",
        "urls": [
          "bzz-raw://24986faf6be5b8c3478adc6a5f0f5707245f536081f2925d001b270fcbabe3f3",
          "dweb:/ipfs/QmV8aGN6rPo8m328Bpv39LWELqwmFZJyLzk7VoK7ARCjYb"
        ],
        "license": "MIT"
      },
      "src/SourceGateway.sol": {
        "keccak256": "0x5588d1d8187021f6f8e12201c046fb3fdd056622cb57d2d6cc9be84c1ae89820",
        "urls": [
          "bzz-raw://5a6a75420b016117f243b64eb5ac7155b2b9448486d9bfc8f9213b00db21bf7d",
          "dweb:/ipfs/QmZSGtgZcsPzNvJ7zxaZ4nMFtXgEXc2VQhDuXmKNukCdH7"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SourceGateway.sol",
    "id": 43452,
    "exportedSymbols": {
      "CCIPReceiver": [
        40910
      ],
      "Client": [
        41030
      ],
      "SourceContract": [
        43396
      ],
      "SourceGateway": [
        43451
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:863:33",
    "nodes": [
      {
        "id": 43398,
        "nodeType": "PragmaDirective",
        "src": "32:23:33",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 43400,
        "nodeType": "ImportDirective",
        "src": "57:99:33",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43452,
        "sourceUnit": 40911,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43399,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40910,
              "src": "65:12:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43402,
        "nodeType": "ImportDirective",
        "src": "157:84:33",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43452,
        "sourceUnit": 41031,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43401,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41030,
              "src": "165:6:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43404,
        "nodeType": "ImportDirective",
        "src": "242:52:33",
        "nodes": [],
        "absolutePath": "src/SourceContract.sol",
        "file": "./SourceContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43452,
        "sourceUnit": 43397,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43403,
              "name": "SourceContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43396,
              "src": "250:14:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43451,
        "nodeType": "ContractDefinition",
        "src": "296:598:33",
        "nodes": [
          {
            "id": 43409,
            "nodeType": "VariableDeclaration",
            "src": "341:29:33",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sourceContract",
            "nameLocation": "356:14:33",
            "scope": 43451,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SourceContract_$43396",
              "typeString": "contract SourceContract"
            },
            "typeName": {
              "id": 43408,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43407,
                "name": "SourceContract",
                "nameLocations": [
                  "341:14:33"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43396,
                "src": "341:14:33"
              },
              "referencedDeclaration": 43396,
              "src": "341:14:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SourceContract_$43396",
                "typeString": "contract SourceContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 43427,
            "nodeType": "FunctionDefinition",
            "src": "527:163:33",
            "nodes": [],
            "body": {
              "id": 43426,
              "nodeType": "Block",
              "src": "625:65:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 43424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43420,
                      "name": "sourceContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43409,
                      "src": "635:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SourceContract_$43396",
                        "typeString": "contract SourceContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43422,
                          "name": "_sourceContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43414,
                          "src": "667:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 43421,
                        "name": "SourceContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43396,
                        "src": "652:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SourceContract_$43396_$",
                          "typeString": "type(contract SourceContract)"
                        }
                      },
                      "id": 43423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "652:31:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SourceContract_$43396",
                        "typeString": "contract SourceContract"
                      }
                    },
                    "src": "635:48:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SourceContract_$43396",
                      "typeString": "contract SourceContract"
                    }
                  },
                  "id": 43425,
                  "nodeType": "ExpressionStatement",
                  "src": "635:48:33"
                }
              ]
            },
            "documentation": {
              "id": 43410,
              "nodeType": "StructuredDocumentation",
              "src": "377:145:33",
              "text": " @param _router Address of the CCIP Router contract\n @param _sourceContract address of the sourceContract contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 43417,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43412,
                    "src": "616:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 43418,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 43416,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "603:12:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40910,
                  "src": "603:12:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "603:21:33"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 43415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43412,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "556:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 43427,
                  "src": "548:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43414,
                  "mutability": "mutable",
                  "name": "_sourceContract",
                  "nameLocation": "581:15:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 43427,
                  "src": "573:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "538:64:33"
            },
            "returnParameters": {
              "id": 43419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:0:33"
            },
            "scope": 43451,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43450,
            "nodeType": "FunctionDefinition",
            "src": "696:196:33",
            "nodes": [],
            "body": {
              "id": 43449,
              "nodeType": "Block",
              "src": "788:104:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43435,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43435,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "804:7:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 43449,
                      "src": "799:12:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 43434,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "799:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 43444,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43441,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43430,
                          "src": "846:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$40995_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 43442,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "854:4:33",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40990,
                        "src": "846:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 43438,
                            "name": "sourceContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43409,
                            "src": "825:14:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SourceContract_$43396",
                              "typeString": "contract SourceContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SourceContract_$43396",
                              "typeString": "contract SourceContract"
                            }
                          ],
                          "id": 43437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "817:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43436,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "817:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:23:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 43440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "841:4:33",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "817:28:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 43443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "817:42:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "798:61:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43446,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43435,
                        "src": "877:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 43445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "869:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 43447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "869:16:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43448,
                  "nodeType": "ExpressionStatement",
                  "src": "869:16:33"
                }
              ]
            },
            "baseFunctions": [
              40875
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "705:12:33",
            "overrides": {
              "id": 43432,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "779:8:33"
            },
            "parameters": {
              "id": 43431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43430,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "756:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 43450,
                  "src": "727:36:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$40995_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 43429,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43428,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "727:6:33",
                        "734:14:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40995,
                      "src": "727:21:33"
                    },
                    "referencedDeclaration": 40995,
                    "src": "727:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$40995_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "717:52:33"
            },
            "returnParameters": {
              "id": 43433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:33"
            },
            "scope": 43451,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43405,
              "name": "CCIPReceiver",
              "nameLocations": [
                "322:12:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40910,
              "src": "322:12:33"
            },
            "id": 43406,
            "nodeType": "InheritanceSpecifier",
            "src": "322:12:33"
          }
        ],
        "canonicalName": "SourceGateway",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43451,
          40910,
          41120,
          40923
        ],
        "name": "SourceGateway",
        "nameLocation": "305:13:33",
        "scope": 43452,
        "usedErrors": [
          40891
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 33
}