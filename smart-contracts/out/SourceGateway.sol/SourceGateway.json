{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sourceContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161061b38038061061b83398101604081905261002f916100a6565b816001600160a01b03811661005e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b03908116608052600080546001600160a01b03191692909116919091179055506100d9565b80516001600160a01b03811681146100a157600080fd5b919050565b600080604083850312156100b957600080fd5b6100c28361008a565b91506100d06020840161008a565b90509250929050565b6080516105226100f9600039600081816090015260fc01526105226000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046101ca565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c3660046101fb565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610140576040516335fdcccd60e21b815233600482015260240160405180910390fd5b61015161014c82610410565b610154565b50565b6000805460608301516040516001600160a01b039092169161017691906104bd565b6000604051808303816000865af19150503d80600081146101b3576040519150601f19603f3d011682016040523d82523d6000602084013e6101b8565b606091505b50509050806101c657600080fd5b5050565b6000602082840312156101dc57600080fd5b81356001600160e01b0319811681146101f457600080fd5b9392505050565b60006020828403121561020d57600080fd5b813567ffffffffffffffff81111561022457600080fd5b820160a081850312156101f457600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561026f5761026f610236565b60405290565b60405160a0810167ffffffffffffffff8111828210171561026f5761026f610236565b604051601f8201601f1916810167ffffffffffffffff811182821017156102c1576102c1610236565b604052919050565b803567ffffffffffffffff811681146102e157600080fd5b919050565b600082601f8301126102f757600080fd5b813567ffffffffffffffff81111561031157610311610236565b610324601f8201601f1916602001610298565b81815284602083860101111561033957600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261036757600080fd5b8135602067ffffffffffffffff82111561038357610383610236565b610391818360051b01610298565b82815260069290921b840181019181810190868411156103b057600080fd5b8286015b8481101561040557604081890312156103cd5760008081fd5b6103d561024c565b81356001600160a01b03811681146103ed5760008081fd5b815281850135858201528352918301916040016103b4565b509695505050505050565b600060a0823603121561042257600080fd5b61042a610275565b8235815261043a602084016102c9565b6020820152604083013567ffffffffffffffff8082111561045a57600080fd5b610466368387016102e6565b6040840152606085013591508082111561047f57600080fd5b61048b368387016102e6565b606084015260808501359150808211156104a457600080fd5b506104b136828601610356565b60808301525092915050565b6000825160005b818110156104de57602081860181015185830152016104c4565b50600092019182525091905056fea2646970667358221220649ff18fb1c9420b6440eee73b827e16641d82724cb7dcf56524411deb3b30be64736f6c63430008130033",
    "sourceMap": "296:598:12:-:0;;;527:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;616:7;-1:-1:-1;;;;;538:20:0;;534:58;;567:25;;-1:-1:-1;;;567:25:0;;589:1;567:25;;;640:51:13;613:18;;567:25:0;;;;;;;534:58;-1:-1:-1;;;;;598:17:0;;;;;635:14:12::1;:48:::0;;-1:-1:-1;;;;;;635:48:12::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;296:598:12;;14:177:13;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;296:598:12;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046101ca565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c3660046101fb565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610140576040516335fdcccd60e21b815233600482015260240160405180910390fd5b61015161014c82610410565b610154565b50565b6000805460608301516040516001600160a01b039092169161017691906104bd565b6000604051808303816000865af19150503d80600081146101b3576040519150601f19603f3d011682016040523d82523d6000602084013e6101b8565b606091505b50509050806101c657600080fd5b5050565b6000602082840312156101dc57600080fd5b81356001600160e01b0319811681146101f457600080fd5b9392505050565b60006020828403121561020d57600080fd5b813567ffffffffffffffff81111561022457600080fd5b820160a081850312156101f457600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561026f5761026f610236565b60405290565b60405160a0810167ffffffffffffffff8111828210171561026f5761026f610236565b604051601f8201601f1916810167ffffffffffffffff811182821017156102c1576102c1610236565b604052919050565b803567ffffffffffffffff811681146102e157600080fd5b919050565b600082601f8301126102f757600080fd5b813567ffffffffffffffff81111561031157610311610236565b610324601f8201601f1916602001610298565b81815284602083860101111561033957600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261036757600080fd5b8135602067ffffffffffffffff82111561038357610383610236565b610391818360051b01610298565b82815260069290921b840181019181810190868411156103b057600080fd5b8286015b8481101561040557604081890312156103cd5760008081fd5b6103d561024c565b81356001600160a01b03811681146103ed5760008081fd5b815281850135858201528352918301916040016103b4565b509695505050505050565b600060a0823603121561042257600080fd5b61042a610275565b8235815261043a602084016102c9565b6020820152604083013567ffffffffffffffff8082111561045a57600080fd5b610466368387016102e6565b6040840152606085013591508082111561047f57600080fd5b61048b368387016102e6565b606084015260808501359150808211156104a457600080fd5b506104b136828601610356565b60808301525092915050565b6000825160005b818110156104de57602081860181015185830152016104c4565b50600092019182525091905056fea2646970667358221220649ff18fb1c9420b6440eee73b827e16641d82724cb7dcf56524411deb3b30be64736f6c63430008130033",
    "sourceMap": "296:598:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:209:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;1397:209:0;;;;;;;;1652:130;;;;;;:::i;:::-;;:::i;:::-;;2194:86;;;-1:-1:-1;;;;;2266:8:0;1059:32:13;1041:51;;1029:2;1014:18;2194:86:0;895:203:13;1397:209:0;1482:4;-1:-1:-1;;;;;;1501:56:0;;-1:-1:-1;;;1501:56:0;;:100;;-1:-1:-1;;;;;;;1561:40:0;;-1:-1:-1;;;1561:40:0;1501:100;1494:107;1397:209;-1:-1:-1;;1397:209:0:o;1652:130::-;2412:10;-1:-1:-1;;;;;2434:8:0;2412:31;;2408:69;;2452:25;;-1:-1:-1;;;2452:25:0;;2466:10;2452:25;;;1041:51:13;1014:18;;2452:25:0;;;;;;;2408:69;1756:21:::1;;1769:7:::0;1756:21:::1;:::i;:::-;:12;:21::i;:::-;1652:130:::0;:::o;696:196:12:-;799:12;825:14;;846:12;;;;817:42;;-1:-1:-1;;;;;825:14:12;;;;817:42;;846:12;817:42;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;798:61;;;877:7;869:16;;;;;;788:104;696:196;:::o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;497:393::-;589:6;642:2;630:9;621:7;617:23;613:32;610:52;;;658:1;655;648:12;610:52;698:9;685:23;731:18;723:6;720:30;717:50;;;763:1;760;753:12;717:50;786:22;;842:3;824:16;;;820:26;817:46;;;859:1;856;849:12;1103:127;1164:10;1159:3;1155:20;1152:1;1145:31;1195:4;1192:1;1185:15;1219:4;1216:1;1209:15;1235:256;1306:4;1300:11;;;1338:17;;1385:18;1370:34;;1406:22;;;1367:62;1364:88;;;1432:18;;:::i;:::-;1468:4;1461:24;1235:256;:::o;1496:252::-;1567:2;1561:9;1609:4;1597:17;;1644:18;1629:34;;1665:22;;;1626:62;1623:88;;;1691:18;;:::i;1753:275::-;1824:2;1818:9;1889:2;1870:13;;-1:-1:-1;;1866:27:13;1854:40;;1924:18;1909:34;;1945:22;;;1906:62;1903:88;;;1971:18;;:::i;:::-;2007:2;2000:22;1753:275;;-1:-1:-1;1753:275:13:o;2033:171::-;2100:20;;2160:18;2149:30;;2139:41;;2129:69;;2194:1;2191;2184:12;2129:69;2033:171;;;:::o;2209:530::-;2251:5;2304:3;2297:4;2289:6;2285:17;2281:27;2271:55;;2322:1;2319;2312:12;2271:55;2358:6;2345:20;2384:18;2380:2;2377:26;2374:52;;;2406:18;;:::i;:::-;2450:55;2493:2;2474:13;;-1:-1:-1;;2470:27:13;2499:4;2466:38;2450:55;:::i;:::-;2530:2;2521:7;2514:19;2576:3;2569:4;2564:2;2556:6;2552:15;2548:26;2545:35;2542:55;;;2593:1;2590;2583:12;2542:55;2658:2;2651:4;2643:6;2639:17;2632:4;2623:7;2619:18;2606:55;2706:1;2681:16;;;2699:4;2677:27;2670:38;;;;2685:7;2209:530;-1:-1:-1;;;2209:530:13:o;2744:1177::-;2812:5;2865:3;2858:4;2850:6;2846:17;2842:27;2832:55;;2883:1;2880;2873:12;2832:55;2919:6;2906:20;2945:4;2968:18;2964:2;2961:26;2958:52;;;2990:18;;:::i;:::-;3030:36;3062:2;3057;3054:1;3050:10;3046:19;3030:36;:::i;:::-;3100:15;;;3186:1;3182:10;;;;3170:23;;3166:32;;;3131:12;;;;3210:15;;;3207:35;;;3238:1;3235;3228:12;3207:35;3274:2;3266:6;3262:15;3286:606;3302:6;3297:3;3294:15;3286:606;;;3380:4;3374:3;3369;3365:13;3361:24;3358:114;;;3426:1;3455:2;3451;3444:14;3358:114;3498:21;;:::i;:::-;3547:17;;-1:-1:-1;;;;;3599:33:13;;3587:46;;3577:144;;3675:1;3704:2;3700;3693:14;3577:144;3734:22;;3805:12;;;3792:26;3776:14;;;3769:50;3832:18;;3870:12;;;;3328:4;3319:14;3286:606;;;-1:-1:-1;3910:5:13;2744:1177;-1:-1:-1;;;;;;2744:1177:13:o;3926:1008::-;4040:9;4099:4;4091:5;4075:14;4071:26;4067:37;4064:57;;;4117:1;4114;4107:12;4064:57;4145:21;;:::i;:::-;4204:5;4191:19;4182:7;4175:36;4245:33;4274:2;4267:5;4263:14;4245:33;:::i;:::-;4240:2;4231:7;4227:16;4220:59;4326:2;4319:5;4315:14;4302:28;4349:18;4390:2;4382:6;4379:14;4376:34;;;4406:1;4403;4396:12;4376:34;4444:52;4481:14;4472:6;4465:5;4461:18;4444:52;:::i;:::-;4439:2;4430:7;4426:16;4419:78;4546:2;4539:5;4535:14;4522:28;4506:44;;4575:2;4565:8;4562:16;4559:36;;;4591:1;4588;4581:12;4559:36;4629:54;4668:14;4657:8;4650:5;4646:20;4629:54;:::i;:::-;4624:2;4615:7;4611:16;4604:80;4733:3;4726:5;4722:15;4709:29;4693:45;;4763:2;4753:8;4750:16;4747:36;;;4779:1;4776;4769:12;4747:36;;4818:80;4883:14;4872:8;4865:5;4861:20;4818:80;:::i;:::-;4812:3;4799:17;;4792:107;-1:-1:-1;4803:7:13;3926:1008;-1:-1:-1;;3926:1008:13:o;4939:412::-;5068:3;5106:6;5100:13;5131:1;5141:129;5155:6;5152:1;5149:13;5141:129;;;5253:4;5237:14;;;5233:25;;5227:32;5214:11;;;5207:53;5170:12;5141:129;;;-1:-1:-1;5325:1:13;5289:16;;5314:13;;;-1:-1:-1;5289:16:13;4939:412;-1:-1:-1;4939:412:13:o",
    "linkReferences": {},
    "immutableReferences": {
      "14": [
        {
          "start": 144,
          "length": 32
        },
        {
          "start": 252,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "getRouter()": "b0f479a1",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sourceContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"constructor\":{\"params\":{\"_router\":\"Address of the CCIP Router contract\",\"_sourceContract\":\"address of the sourceContract contract\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SourceGateway.sol\":\"SourceGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/gho-core/node_modules/@aave/\",\":@aave/core-v3/=lib/gho-core/node_modules/@aave/core-v3/\",\":@aave/periphery-v3/=lib/gho-core/node_modules/@aave/periphery-v3/\",\":@chainlink/=node_modules/@chainlink/\",\":@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-address-book/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/src/\",\":aave-helpers/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-helpers/\",\":aave-stk-v1-5/=lib/gho-core/lib/aave-stk-v1-5/\",\":aave-v3-core/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/lib/aave-v3-core/\",\":aave-v3-periphery/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/lib/aave-v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=lib/gho-core/node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":gho-core/=lib/gho-core/\",\":hardhat-deploy/=lib/gho-core/node_modules/hardhat-deploy/\",\":hardhat/=lib/gho-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-utils/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-helpers/lib/solidity-utils/\"]},\"sources\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7\",\"dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea\",\"dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e\",\"dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2\",\"dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"src/PriceConverter.sol\":{\"keccak256\":\"0xba1c93cead77719224a1c6fb9ba816be6329fe7ee7ba64a10dd7be6bbb738a7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a5fbd6e0aeddb553855cf65270f9acaad2bbd1b141ef45b2de253d2160c676b\",\"dweb:/ipfs/QmP6RnKXbqXCfUKLNyNS6V33Rr9SYQBQxdtLyPEoqwDtVy\"]},\"src/SourceContract.sol\":{\"keccak256\":\"0xb516ca919fa279a781a1fa9a88bad6eb84e81c7507e02703c433ece56d0032e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d9f067404f67cee544adc345ce35b92e2d05b2d2645ae1c3114e8bde8f4c721\",\"dweb:/ipfs/QmeLzf9SNzneChSwpY5LfdAipv6EK1q8HE2ojuysSHYk3o\"]},\"src/SourceGateway.sol\":{\"keccak256\":\"0x5588d1d8187021f6f8e12201c046fb3fdd056622cb57d2d6cc9be84c1ae89820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a6a75420b016117f243b64eb5ac7155b2b9448486d9bfc8f9213b00db21bf7d\",\"dweb:/ipfs/QmZSGtgZcsPzNvJ7zxaZ4nMFtXgEXc2VQhDuXmKNukCdH7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_router",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_sourceContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Note ensure you check the msg.sender is the OffRampRouter",
            "params": {
              "message": "CCIP Message"
            }
          },
          "constructor": {
            "params": {
              "_router": "Address of the CCIP Router contract",
              "_sourceContract": "address of the sourceContract contract"
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aave/=lib/gho-core/node_modules/@aave/",
        ":@aave/core-v3/=lib/gho-core/node_modules/@aave/core-v3/",
        ":@aave/periphery-v3/=lib/gho-core/node_modules/@aave/periphery-v3/",
        ":@chainlink/=node_modules/@chainlink/",
        ":@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/",
        ":@chainlink/contracts/=node_modules/@chainlink/contracts/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":aave-address-book/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/src/",
        ":aave-helpers/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-helpers/",
        ":aave-stk-v1-5/=lib/gho-core/lib/aave-stk-v1-5/",
        ":aave-v3-core/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/lib/aave-v3-core/",
        ":aave-v3-periphery/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-address-book/lib/aave-v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":eth-gas-reporter/=lib/gho-core/node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":gho-core/=lib/gho-core/",
        ":hardhat-deploy/=lib/gho-core/node_modules/hardhat-deploy/",
        ":hardhat/=lib/gho-core/node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solidity-utils/=lib/gho-core/lib/aave-stk-v1-5/lib/aave-helpers/lib/solidity-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SourceGateway.sol": "SourceGateway"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6",
        "urls": [
          "bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7",
          "dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48",
        "urls": [
          "bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33",
          "dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol": {
        "keccak256": "0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b",
        "urls": [
          "bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea",
          "dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679",
        "urls": [
          "bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e",
          "dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f",
        "urls": [
          "bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2",
          "dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
        "urls": [
          "bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
          "dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
        ],
        "license": "MIT"
      },
      "src/PriceConverter.sol": {
        "keccak256": "0xba1c93cead77719224a1c6fb9ba816be6329fe7ee7ba64a10dd7be6bbb738a7d",
        "urls": [
          "bzz-raw://2a5fbd6e0aeddb553855cf65270f9acaad2bbd1b141ef45b2de253d2160c676b",
          "dweb:/ipfs/QmP6RnKXbqXCfUKLNyNS6V33Rr9SYQBQxdtLyPEoqwDtVy"
        ],
        "license": "MIT"
      },
      "src/SourceContract.sol": {
        "keccak256": "0xb516ca919fa279a781a1fa9a88bad6eb84e81c7507e02703c433ece56d0032e3",
        "urls": [
          "bzz-raw://8d9f067404f67cee544adc345ce35b92e2d05b2d2645ae1c3114e8bde8f4c721",
          "dweb:/ipfs/QmeLzf9SNzneChSwpY5LfdAipv6EK1q8HE2ojuysSHYk3o"
        ],
        "license": "MIT"
      },
      "src/SourceGateway.sol": {
        "keccak256": "0x5588d1d8187021f6f8e12201c046fb3fdd056622cb57d2d6cc9be84c1ae89820",
        "urls": [
          "bzz-raw://5a6a75420b016117f243b64eb5ac7155b2b9448486d9bfc8f9213b00db21bf7d",
          "dweb:/ipfs/QmZSGtgZcsPzNvJ7zxaZ4nMFtXgEXc2VQhDuXmKNukCdH7"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SourceGateway.sol",
    "id": 2032,
    "exportedSymbols": {
      "CCIPReceiver": [
        119
      ],
      "Client": [
        239
      ],
      "SourceContract": [
        1976
      ],
      "SourceGateway": [
        2031
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:863:12",
    "nodes": [
      {
        "id": 1978,
        "nodeType": "PragmaDirective",
        "src": "32:23:12",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 1980,
        "nodeType": "ImportDirective",
        "src": "57:99:12",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2032,
        "sourceUnit": 120,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1979,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119,
              "src": "65:12:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1982,
        "nodeType": "ImportDirective",
        "src": "157:84:12",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2032,
        "sourceUnit": 240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1981,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 239,
              "src": "165:6:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1984,
        "nodeType": "ImportDirective",
        "src": "242:52:12",
        "nodes": [],
        "absolutePath": "src/SourceContract.sol",
        "file": "./SourceContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2032,
        "sourceUnit": 1977,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1983,
              "name": "SourceContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1976,
              "src": "250:14:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2031,
        "nodeType": "ContractDefinition",
        "src": "296:598:12",
        "nodes": [
          {
            "id": 1989,
            "nodeType": "VariableDeclaration",
            "src": "341:29:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sourceContract",
            "nameLocation": "356:14:12",
            "scope": 2031,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SourceContract_$1976",
              "typeString": "contract SourceContract"
            },
            "typeName": {
              "id": 1988,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1987,
                "name": "SourceContract",
                "nameLocations": [
                  "341:14:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1976,
                "src": "341:14:12"
              },
              "referencedDeclaration": 1976,
              "src": "341:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SourceContract_$1976",
                "typeString": "contract SourceContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2007,
            "nodeType": "FunctionDefinition",
            "src": "527:163:12",
            "nodes": [],
            "body": {
              "id": 2006,
              "nodeType": "Block",
              "src": "625:65:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2000,
                      "name": "sourceContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1989,
                      "src": "635:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SourceContract_$1976",
                        "typeString": "contract SourceContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2002,
                          "name": "_sourceContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1994,
                          "src": "667:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2001,
                        "name": "SourceContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1976,
                        "src": "652:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SourceContract_$1976_$",
                          "typeString": "type(contract SourceContract)"
                        }
                      },
                      "id": 2003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "652:31:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SourceContract_$1976",
                        "typeString": "contract SourceContract"
                      }
                    },
                    "src": "635:48:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SourceContract_$1976",
                      "typeString": "contract SourceContract"
                    }
                  },
                  "id": 2005,
                  "nodeType": "ExpressionStatement",
                  "src": "635:48:12"
                }
              ]
            },
            "documentation": {
              "id": 1990,
              "nodeType": "StructuredDocumentation",
              "src": "377:145:12",
              "text": " @param _router Address of the CCIP Router contract\n @param _sourceContract address of the sourceContract contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1997,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1992,
                    "src": "616:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1998,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1996,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "603:12:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119,
                  "src": "603:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "603:21:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1992,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "556:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "548:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1994,
                  "mutability": "mutable",
                  "name": "_sourceContract",
                  "nameLocation": "581:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "573:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "538:64:12"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:0:12"
            },
            "scope": 2031,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2030,
            "nodeType": "FunctionDefinition",
            "src": "696:196:12",
            "nodes": [],
            "body": {
              "id": 2029,
              "nodeType": "Block",
              "src": "788:104:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2015,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2015,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "804:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2029,
                      "src": "799:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2014,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "799:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2024,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2021,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2010,
                          "src": "846:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$204_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "854:4:12",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 199,
                        "src": "846:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2018,
                            "name": "sourceContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1989,
                            "src": "825:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SourceContract_$1976",
                              "typeString": "contract SourceContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SourceContract_$1976",
                              "typeString": "contract SourceContract"
                            }
                          ],
                          "id": 2017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "817:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "817:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:23:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "841:4:12",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "817:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "817:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "798:61:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2026,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "877:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2025,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "869:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "869:16:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2028,
                  "nodeType": "ExpressionStatement",
                  "src": "869:16:12"
                }
              ]
            },
            "baseFunctions": [
              84
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "705:12:12",
            "overrides": {
              "id": 2012,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "779:8:12"
            },
            "parameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2010,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "756:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2030,
                  "src": "727:36:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$204_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 2009,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2008,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "727:6:12",
                        "734:14:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 204,
                      "src": "727:21:12"
                    },
                    "referencedDeclaration": 204,
                    "src": "727:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$204_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "717:52:12"
            },
            "returnParameters": {
              "id": 2013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:12"
            },
            "scope": 2031,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1985,
              "name": "CCIPReceiver",
              "nameLocations": [
                "322:12:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 119,
              "src": "322:12:12"
            },
            "id": 1986,
            "nodeType": "InheritanceSpecifier",
            "src": "322:12:12"
          }
        ],
        "canonicalName": "SourceGateway",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2031,
          119,
          329,
          132
        ],
        "name": "SourceGateway",
        "nameLocation": "305:13:12",
        "scope": 2032,
        "usedErrors": [
          100
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 12
}